apiVersion: v1
kind: ConfigMap
metadata:
  name: workflow-controller-configmap
  namespace: argo
data:
  parallelism: "20"
  namespaceParallelism: "20"
  resourceRateLimit: |
    limit: 30
    burst: 1
  # persistence: |
  #   connectionPool:
  #     maxIdleConns: 100
  #     maxOpenConns: 0
  #     connMaxLifetime: 0s # 0 means connections don't have a max lifetime
  #   #  if true node status is only saved to the persistence DB to avoid the 1MB limit in etcd
  #   nodeStatusOffLoad: true
  #   # save completed workloads to the workflow archive
  #   archive: false
  #   # the number of days to keep archived workflows (the default is forever)
  #   archiveTTL: 180d
  #   # skip database migration if needed.
  #   # skipMigration: true

  #   # LabelSelector determines the workflow that matches with the matchlabels or matchrequirements, will be archived.
  #   # https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  #   archiveLabelSelector:
  #     matchLabels:
  #       workflows.argoproj.io/archive-strategy: "always"

  #   # Optional name of the cluster I'm running in. This must be unique for your cluster.
  #   clusterName: default
  #   postgresql:
  #     host: hippo-primary.postgres-operator.svc
  #     port: 5432
  #     database: registry
  #     tableName: argo_workflows
  #     # the database secrets must be in the same namespace of the controller
  #     userNameSecret:
  #       name: argo-postgres-config
  #       key: username
  #     passwordSecret:
  #       name: argo-postgres-config
  #       key: password
  #     ssl: false
  #     # sslMode must be one of: disable, require, verify-ca, verify-full
  #     # you can find more information about those ssl options here: https://godoc.org/github.com/lib/pq
  #     sslMode: disable
  retentionPolicy: |
    completed: 5
    failed: 20
    errored: 20
  workflowDefaults: |
    metadata:
      labels:
        workload: ci
    spec:
      activeDeadlineSeconds: 7200
      metrics:
        prometheus:
          - name: exec_duration_gauge
            help: "Duration gauge by name"
            labels:
              - key: name
                value: "{{workflow.name}}"
              - key: namespace
                value: "{{workflow.namespace}}"
              - key: templatename
                value: "{{workflow.labels.workflows.argoproj.io/workflow-template}}"
            gauge:
              value: "{{workflow.duration}}"
          - name: failed_count
            help: "Total count of all the failed workflows"
            labels:
              - key: name
                value: "{{workflow.name}}"
              - key: namespace
                value: "{{workflow.namespace}}"
              - key: templatename
                value: "{{workflow.labels.workflows.argoproj.io/workflow-template}}"
            when: "{{workflow.status}} == Failed"
            counter:
              value: "1"
          - name: successed_count
            help: "Total count of all the successed workflows"
            labels:
              - key: name
                value: "{{workflow.name}}"
              - key: namespace
                value: "{{workflow.namespace}}"
              - key: templatename
                value: "{{workflow.labels.workflows.argoproj.io/workflow-template}}"
            when: "{{workflow.status}} == Succeeded"
            counter:
              value: "1"
          - name: total_count
            help: "Total count of all the workflows"
            labels:
              - key: name
                value: "{{workflow.name}}"
              - key: namespace
                value: "{{workflow.namespace}}"
              - key: templatename
                value: "{{workflow.labels.workflows.argoproj.io/workflow-template}}"
            counter:
              value: "1"
      nodeSelector:
        kubernetes.io/os: linux
      # podGC:
      #   strategy: OnWorkflowSuccess
      imagePullSecrets:
      - name: harbor
      volumeClaimTemplates:
        - metadata:
            name: work
          spec:
            accessModes: ["ReadWriteMany"]
            storageClassName: "standard"
            resources:
              requests:
                storage: 7Gi